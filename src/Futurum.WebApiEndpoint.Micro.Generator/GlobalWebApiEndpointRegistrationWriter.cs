using Futurum.WebApiEndpoint.Micro.Generator.Core;

namespace Futurum.WebApiEndpoint.Micro.Generator;

public static class GlobalWebApiEndpointRegistrationWriter
{
    public static string Write(string methodName, GlobalWebApiEndpointDatum? globalWebApiEndpointDatum) =>
        WriteWrapper(methodName, "RegisterGlobalWebApiEndpoint",
                     codeBuilder => Write(codeBuilder, globalWebApiEndpointDatum),
                     true);

    private static void Write(IndentedStringBuilder codeBuilder, GlobalWebApiEndpointDatum? globalWebApiEndpointDatum)
    {
        if (globalWebApiEndpointDatum != null)
        {
            codeBuilder.AppendLine(
                $"serviceCollection.AddSingleton(typeof(global::Futurum.WebApiEndpoint.Micro.IGlobalWebApiEndpoint), typeof({globalWebApiEndpointDatum.NamespaceName}.{globalWebApiEndpointDatum.ImplementationType}));");
        }
    }

    private static string WriteWrapper(string className, string methodName, Action<IndentedStringBuilder> writer, bool isNotMainMethod)
    {
        var codeBuilder = new IndentedStringBuilder();
        codeBuilder
            .AppendLine("// <auto-generated />")
            .AppendLine("#nullable enable")
            .AppendLine();

        codeBuilder
            .AppendLine("namespace Microsoft.Extensions.DependencyInjection")
            .AppendLine("{")
            .IncrementIndent();

        if (!isNotMainMethod)
        {
            codeBuilder
                .AppendLine("[global::System.Diagnostics.DebuggerNonUserCodeAttribute]")
                .AppendLine("[global::System.Diagnostics.DebuggerStepThroughAttribute]");
        }

        codeBuilder
            .AppendLine($"public static partial class {className}FuturumWebApiEndpointMicroExtensions")
            .AppendLine("{")
            .IncrementIndent();

        codeBuilder
            .Append("private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection")
            .Append(" ")
            .Append(methodName)
            .AppendLine("(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)")
            .AppendLine("{")
            .IncrementIndent();

        writer(codeBuilder);

        codeBuilder
            .AppendLine("return serviceCollection;")
            .DecrementIndent()
            .AppendLine("}") // method
            .DecrementIndent()
            .AppendLine("}") // class
            .DecrementIndent()
            .AppendLine("}"); // namespace

        return codeBuilder.ToString();
    }
}
